name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
        fetch-depth: 0
    - name: get new tag
      run: |
        cd cakemix-server && SVVER=$(git describe --tags --abbrev=0) && cd ..
        cd cakemix-front && FRVER=$(git describe --tags --abbrev=0) && cd ..
        echo "newtag=s${SVVER}-f${FRVER}" >> $GITHUB_ENV
    - name: add tag
      run: |
        git checkout main
        git tag ${{ env.newtag }}
        git push --tags
    - name: create release
      uses: actions/github-script@v4.0.2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const svpromise = github.repos.getLatestRelease({
            owner: "wonder-wonder",
            repo: "cakemix-server",
          });
          const frpromise = github.repos.getLatestRelease({
            owner: "wonder-wonder",
            repo: "cakemix-front",
          });
          const body = await Promise.all([svpromise,frpromise]).then((dat)=>{
            return  "# What's new\n\n" +
                    "## [Server](https://github.com/wonder-wonder/cakemix-server/releases/latest)\n" +
                    dat[0].data.body +
                    "\n\n" +
                    "## [Front](https://github.com/wonder-wonder/cakemix-front/releases/latest)\n" +
                    dat[1].data.body
          })
          github.repos.createRelease({
            ...context.repo,
            draft: false,
            tag_name: "${{ env.newtag }}",
            name: "${{ env.newtag }}",
            target_commitish: process.env.GITHUB_SHA,
            body: body,
          });
    - name: download front
      run: |
        mkdir dist && cd dist
        curl -L -o www.tar.gz https://github.com/wonder-wonder/cakemix-front/releases/latest/download/www.tar.gz
        tar xf www.tar.gz
    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build container image
      uses: docker/build-push-action@v2
      with:
        platforms: linux/amd64,linux/arm/v7,linux/arm64
        context: .
        push: true
        tags: |
          ghcr.io/wonder-wonder/cakemix:${{ env.newtag }}
          ghcr.io/wonder-wonder/cakemix:latest
